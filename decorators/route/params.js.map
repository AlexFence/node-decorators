{"version":3,"file":"params.js","sourceRoot":"","sources":["params.ts"],"names":[],"mappings":";AAAA,sBAAwB,UAAU,CAAC,CAAA;AAEnC,gCAAuC,MAAW,EAAE,UAAkB,EAAE,MAAW;IACjF,IAAI,IAAI,GAAG,eAAO,CAAC,MAAM,CAAC,CAAC;IAC3B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;IAC/B,CAAC;IACD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,CAAC;AANe,8BAAsB,yBAMrC,CAAA;AAED,mCAA0C,aAAkB;IAC1D,MAAM,CAAC;QACL,MAAM,CAAC,UAAU,MAAW,EAAE,UAAkB,EAAE,KAAa;YAC7D,sBAAsB,CAAC,MAAM,EAAE,UAAU,EAAE,EAAC,YAAK,EAAE,IAAI,EAAE,aAAa,EAAC,CAAC,CAAC;QAC3E,CAAC,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AANe,iCAAyB,4BAMxC,CAAA;AAEU,eAAO,GAAG,cAAM,OAAA,UAAC,MAAW,EAAE,UAAkB,EAAE,KAAa;IACxE,sBAAsB,CAAC,MAAM,EAAE,UAAU,EAAE,EAAC,YAAK,EAAE,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC;AACvE,CAAC,EAF0B,CAE1B,CAAC;AAES,gBAAQ,GAAG,cAAM,OAAA,UAAC,MAAW,EAAE,UAAkB,EAAE,KAAa;IACzE,sBAAsB,CAAC,MAAM,EAAE,UAAU,EAAE,EAAC,YAAK,EAAE,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;AACxE,CAAC,EAF2B,CAE3B,CAAC;AAES,cAAM,GAAG;AAEpB,CAAC,CAAA;AAEU,aAAK,GAAG,UAAC,IAAY;AAEhC,CAAC,CAAA;AAEU,mBAAW,GAAG;AAEzB,CAAC,CAAA;AAEU,kBAAU,GAAG,UAAC,IAAY;AAErC,CAAC,CAAA;AAEU,YAAI,GAAG;AAElB,CAAC,CAAA;AAEU,iBAAS,GAAG,UAAC,IAAY;AAEpC,CAAC,CAAA;AAEU,eAAO,GAAG;AAErB,CAAC,CAAA;AAEU,mBAAW,GAAG,UAAC,IAAY;AAEtC,CAAC,CAAA;AAEU,eAAO,GAAG;AAErB,CAAC,CAAA;AAEU,mBAAW,GAAG,UAAC,IAAY;AAEtC,CAAC,CAAA","sourcesContent":["import { getMeta } from '../utils';\n\nexport function addMethodConfiguration(target: any, methodName: string, config: any) {\n  let meta = getMeta(target);\n  if (!meta.params[methodName]) {\n    meta.params[methodName] = [];\n  }\n  meta.params[methodName].push(config);\n}\n\nexport function parameterDecoratorFactory(parameterType: any): () => ParameterDecorator {\n  return function(): ParameterDecorator {\n    return function (target: any, methodName: string, index: number) {\n      addMethodConfiguration(target, methodName, {index, type: parameterType});\n    };\n  };\n}\n\nexport let Request = () => (target: any, methodName: string, index: number) => {\n  addMethodConfiguration(target, methodName, {index, type: 'request'});\n};\n\nexport let Response = () => (target: any, methodName: string, index: number) => {\n  addMethodConfiguration(target, methodName, {index, type: 'response'});\n};\n\nexport let Params = () => {\n\n}\n\nexport let Param = (name: string) => {\n\n}\n\nexport let QueryParams = () => {\n\n}\n\nexport let QueryParam = (name: string) => {\n\n}\n\nexport let Body = () => {\n\n}\n\nexport let BodyParam = (name: string) => {\n\n}\n\nexport let Headers = () => {\n\n}\n\nexport let HeaderParam = (name: string) => {\n\n}\n\nexport let Cookies = () => {\n\n}\n\nexport let CookieParam = (name: string) => {\n\n}\n"]}