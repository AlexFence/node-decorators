{"version":3,"file":"express.js","sourceRoot":"","sources":["express.ts"],"names":[],"mappings":"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","sourcesContent":["import { Router, Express } from 'express';\nimport * as express from 'express';\nimport { ParameterType } from './interface';\n\nexport interface DecoratedExpress extends Express {\n  controller(Controller): DecoratedExpress;\n}\n\nfunction getParam(source: any, paramType: string, name: string) {\n  let param = source[paramType];\n  return param[name] || param;\n}\n\nfunction extractParameters(req, res, params): any[] {\n  let args = [];\n  for (let item of params) {\n\n    switch(item.type) {\n      case ParameterType.RESPONSE: args[item.index] = res; break;\n      case ParameterType.REQUEST: args[item.index] = req; break;\n      case ParameterType.PARAMS: args[item.index] = getParam(req, 'params', item.name); break;\n      case ParameterType.QUERY: args[item.index] = getParam(req, 'query', item.name); break;\n      case ParameterType.BODY: args[item.index] = getParam(req, 'body', item.name); break;\n      case ParameterType.HEADERS: args[item.index] = getParam(req, 'headers', item.name); break;\n      case ParameterType.COOKIES: args[item.index] = getParam(req, 'cookies', item.name); break;\n    }\n\n  }\n  return args;\n}\n\nfunction registerController(app, Controller) {\n  let controller = new Controller(),\n    router = Router(),\n    routes: IRoutes = controller.__meta__.routes,\n    middleware: IMiddleware = controller.__meta__.middleware,\n    baseUrl: string = controller.__meta__.baseUrl,\n    params: IParams = controller.__meta__.params;\n\n  for (let methodName in routes) {\n    let method: string = routes[methodName].method, fn: Function;\n\n    fn = (req, res) => {\n      let args = extractParameters(req, res, params[methodName]);\n      return controller[methodName].apply(controller, args)\n    };\n\n    router[method].apply(router, [\n      routes[methodName].url, ...(middleware[methodName] || []), fn\n    ]);\n  }\n\n  app.use(baseUrl, router);\n\n  return app;\n}\n\nexport function decorateExpressApp(app: Express): DecoratedExpress {\n  app['controller'] = Controller => registerController(app, Controller);\n  return <DecoratedExpress>app;\n};\n\nexport let App = (): DecoratedExpress => {\n  let app: DecoratedExpress = <DecoratedExpress>express();\n  app.controller = Controller => registerController(app, Controller);\n  return app;\n};\n\n"]}