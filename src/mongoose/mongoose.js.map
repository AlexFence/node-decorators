{"version":3,"file":"mongoose.js","sourceRoot":"","sources":["mongoose.ts"],"names":[],"mappings":";AAAA,yBAAkE,UAAU,CAAC,CAAA;AAC7E,sBAAgC,UAAU,CAAC,CAAA;AAE3C,wBAAmD,aAAa;IAC9D,IAAI,IAAI,GAAkB,uBAAe,CAAC,aAAa,CAAC,SAAS,CAAC,EAChE,MAAM,GAAW,IAAI,iBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EACxC,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC;IAElC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC;QAC9B,EAAE,CAAC,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IACD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;QACtB,EAAE,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAED,MAAM,CAAC,gBAAK,CAAI,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACrC,CAAC;AAjBe,sBAAc,iBAiB7B,CAAA","sourcesContent":["import { Schema, model as Model, Model as IModel, Document } from 'mongoose';\nimport { getMongooseMeta } from '../utils';\n\nexport function bootstrapModel<T extends Document>(MongooseModel): IModel<T> {\n  let meta: IMongooseMeta = getMongooseMeta(MongooseModel.prototype),\n    schema: Schema = new Schema(meta.schema),\n    model = MongooseModel.prototype;\n\n  for (let key in MongooseModel) {\n    if (MongooseModel.hasOwnProperty(key)) {\n      schema.statics[key] = MongooseModel[key];\n    }\n  }\n  for (let key in model) {\n    if (model.hasOwnProperty(key)) {\n      schema.methods[key] = model[key];\n    }\n  }\n\n  return Model<T>(meta.name, schema);\n}\n"]}